name: AI-Powered Test and Lint

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest flake8 black isort
          
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          
      - name: Format check with black
        run: |
          black --check .
          
      - name: Import sort check with isort
        run: |
          isort --check-only --profile black .
          
      - name: Test with pytest
        run: |
          pytest
          
      - name: AI Test Coverage Analysis
        if: always()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { execSync } = require('child_process');
            
            try {
              // Generate coverage report if pytest-cov is installed
              execSync('python -m pytest --cov=. --cov-report=xml');
              
              const fs = require('fs');
              if (fs.existsSync('./coverage.xml')) {
                const coverage = fs.readFileSync('./coverage.xml', 'utf8');
                
                // Create a comment with AI analysis
                const context = github.context;
                if (context.payload.pull_request) {
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.payload.pull_request.number,
                    body: `## AIテストカバレッジ分析 🤖\n\nテストカバレッジレポートが生成されました。カバレッジを向上させるために、テストが不足している領域を確認してください。\n\n詳細なカバレッジ情報はワークフローの実行結果で確認できます。`
                  });
                }
              }
            } catch (error) {
              console.log('Coverage generation failed:', error);
            }