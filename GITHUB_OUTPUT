commit_msg=読み込んだgit diffが空のため、変更内容を特定できませんでした。ソースコードに実際の変更を加えてから、再実行してください。

もし変更がある場合は、以下のような形式でコミットメッセージを提案できます：

```
feat: 新しい機能を追加
fix: バグを修正
docs: ドキュメント更新
style: コードスタイル変更（機能に影響なし）
refactor: リファクタリング（機能変更なし）
test: テスト追加/修正
chore: ビルドプロセス/ツール変更
```

例として新機能追加の場合：
`feat: ユーザー登録機能を実装`

必ず変更内容を反映したタイトルと、必要に応じて詳細な説明を追加してください。
pr_title=以下は、与えられた差分とGitHub issueに基づいて生成したPRタイトル候補です（日本語）：

1. "ISSUE_TITLEに対応する修正を実装"
2. "ISSUE_TITLEの問題を解決する変更を追加"
3. "ISSUE_BODYの要件を満たす修正"
4. "ISSUE_TITLEのバグ修正"
5. "ISSUE_TITLEの機能改善を実施"

※ 実際のPRタイトルを生成するには、具体的なgit diffの内容とISSUE_TITLE/ISSUE_BODYが必要です。上記はテンプレート的な例です。具体的な情報があれば、より適切なPRタイトルをお作りできます。
pr_body=# GitHub Issue対応: $ISSUE_TITLE

## 変更の目的
$ISSUE_BODY

## 変更内容の詳細

**以下はステージングされた変更の差分です:**

```diff
$(git diff --cached)
```

### 主な変更点

1. [変更点1の説明]
   - 具体的な変更箇所とその理由
   
2. [変更点2の説明] 
   - 具体的な変更箇所とその理由

## 影響範囲
- この変更によって影響を受ける機能やモジュール
- 既存の動作との互換性に関する注意点

## テスト方法
- この変更を検証するためのテスト手順
- 追加/修正したテストケースの説明

## その他の確認事項
- 依存関係の変更の有無
- ドキュメント更新の必要性

この変更により、Issue #${ISSUE_NUMBER} で報告された問題が解決されることを確認しました。レビューをよろしくお願いします。
