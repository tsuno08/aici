commit_msg=変更内容が具体的にわからないため、Gitの差分情報が提供されていません。差分情報を提供いただければ、適切なプレフィックス（feat, fix, docs, style, refactor, test, choreなど）を用いた日本語のコミットメッセージを生成できます。

例として、以下のようにdiff情報を含めて再度ご連絡ください：

```
diff --git a/src/main.js b/src/main.js
index abc1234..def5678 100644
--- a/src/main.js
+++ b/src/main.js
@@ -5,6 +5,7 @@ function calculateSum(a, b) {
     return a + b;
 }

+// 乗算処理を追加
 function calculateProduct(a, b) {
     return a * b;
 }
```

このような差分があれば、適切なコミットメッセージを生成できます。

例（上記差分に対応するメッセージ）:
```
feat: 乗算処理を追加する関数を実装

calculateProduct関数を追加して乗算処理を実装しました。
```

実際の差分情報をお知らせいただければ、より正確なコミットメッセージを提案できます。
pr_title=ここから、適切なPRタイトルを提案します。

1. **バグ修正: [問題の簡潔な説明]**
   - 例: "バグ修正: ログイン時の認証エラーを解消"

2. **機能追加: [追加機能の簡潔な説明]**
   - 例: "機能追加: ユーザープロフィールにアバター画像を表示"

3. **リファクタリング: [改善内容の簡潔な説明]**
   - 例: "リファクタリング: APIコントローラーの冗長なコードを整理"

4. **依存関係更新: [更新内容の簡潔な説明]**
   - 例: "依存関係更新: Reactをv18へアップグレード"

5. **ドキュメント更新: [更新内容の簡潔な説明]**
   - 例: "ドキュメント更新: API仕様書を最新化"

※実際のタイトルは、diffの内容とissueの詳細（$ISSUE_TITLEと$ISSUE_BODY）に基づいて具体的に決定する必要があります。適切な接頭辞（「修正」「追加」「改善」など）を使い、変更内容が簡潔に分かるようにしてください。
pr_body=以下に、GitHub issueに対応するコード変更のためのPR本文を日本語で生成します。技術的な詳細を含め、変更内容が明確に分かるようにしています。

---

## 概要

Issue #123: [タイトル] に対応する修正を行いました。
[ここにIssueの簡単な説明を記載]

## 変更内容

以下の変更を行いました:

1. **主要な修正点1**:
   - 変更ファイル: `path/to/file1.js`
   - 変更内容: [具体的な変更内容を説明]
   - 技術的詳細: 
     - 以前の実装では[問題点]が発生していた
     - 新しい実装では[改善方法]で修正
     - 影響範囲: [影響を受ける他のコンポーネント等]

2. **主要な修正点2**:
   - 変更ファイル: `path/to/file2.js`
   - 変更内容: [具体的な変更内容を説明]
   - 技術的詳細:
     - [技術的な背景や理由]

## 確認事項

- [ ] 単体テストの実施
- [ ] 結合テストの実施
- [ ] ドキュメントの更新

## スクリーンショット/動画(必要であれば)

[変更の視覚的確認ができる素材があれば記載]

## その他

- 特に注意が必要な点
- レビューアーへの注意喚起
- 関連するPRやIssue

---

PR本文では実際のdiff内容とissue内容に基づいて具体的な記述を行う必要があります。技術的な詳細を明確にし、なぜその変更が必要だったのか、どのように問題を解決したのかを説明することで、レビュアーが変更内容を理解しやすくなります。

必要に応じて、変更による影響範囲やテスト方法についても記載するとより良いPRになります。
